datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                   String           @id @default(cuid())
  email                String?          @unique
  phoneNumber          String?          @unique
  password             String?
  firstName            String?
  lastName             String?
  isEmailVerified      Boolean          @default(false)
  isPhoneVerified      Boolean          @default(false)
  isActive             Boolean          @default(false)
  verificationCode     String?
  verificationExpires  DateTime?
  isTwoFactorEnabled   Boolean          @default(false)
  twoFactorSecret      String?
  provider             String? // "local", "google", "github"
  providerId           String?
  refreshToken         String?
  passwordResetToken   String?          @unique
  passwordResetExpires DateTime?
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  deletedAt            DateTime?
  roles                UserRole[]
  permissions          UserPermission[]
}

model Role {
  id          String           @id @default(cuid())
  name        String           @unique
  description String?
  users       UserRole[]
  permissions RolePermission[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model Permission {
  id          String           @id @default(cuid())
  name        String           @unique
  description String?
  roles       RolePermission[]
  users       UserPermission[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model UserRole {
  id        String   @id @default(cuid())
  userId    String
  roleId    String
  user      User     @relation(fields: [userId], references: [id])
  role      Role     @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, roleId])
}

model UserPermission {
  id           String     @id @default(cuid())
  userId       String
  permissionId String
  user         User       @relation(fields: [userId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([userId, permissionId])
}

model RolePermission {
  id           String     @id @default(cuid())
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([roleId, permissionId])
}
